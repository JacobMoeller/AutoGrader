# BASE COMPOSE FILE
# Extracts database values into .env file for production.
#
# Docker Compose file for launching Django connected to a MySQL server
# running in a separate container. The Docker images are described in
# the docker/ folder below here and the database data is stored in
# db/, the Django application stored starting here.
#
# DJANGO PORT must always be specified. Configure (with SETUP.txt) or pass in
# with shell variable.
# Dependent on .env file (not available in git repository).
#
# In production mode on linux:
#   $ docker-compose up
# To run on lab machines in production mode (requires env vars, see SETUP):
#   $ docker-compose -f docker-compose.yml -f docker-compose.lab.yml config
version: "2"

networks:
  # Construct a private network for the Django server and
  # database server to communicate on
  infrastructure:
    external: false

services:
  django:
    restart: always
    build: ./docker/django/
    image: deneb_django
    volumes:
      - $PWD:/usr/src/app
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - $DJANGO_PORT:8000
    container_name: "django_prod"
    networks:
      # Join the infrastructure network
      - infrastructure
    depends_on:
      - db

  db:
    build: ./docker/mysql/
    image: deneb_db
    volumes:
      - $PWD/db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    container_name: "mysql_prod"
    networks:
      # Join the infrastructure network
      - infrastructure
